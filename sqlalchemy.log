select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00231s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01691s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02093s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02682s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03156s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00168s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00129s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00178s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01498s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01895s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02306s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02731s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00153s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00096s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00167s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 16.69s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 30.64s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 33.02s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 33.92s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 37.96s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 39.42s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 40.29s ago] ('main',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00133s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01602s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0198s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02392s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0275s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00129s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00104s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00141s] ('main',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00205s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01527s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01889s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02436s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03251s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00251s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00098s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00229s] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 4.946s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 14.58s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 48.26s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 59.78s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 61.82s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 63.46s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 76.21s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 114s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 115.6s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 116.5s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 117.2s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 117.7s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 122.6s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 123.8s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 126.4s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 127.8s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 128.9s ago] ('about',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00160s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01301s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01647s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01972s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02453s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00118s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00089s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00146s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 3.483s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 5.524s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 9.213s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 10.72s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 22.93s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 14.95s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 19.31s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 31.52s ago] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00173s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01675s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01998s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02334s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02858s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00099s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00097s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00180s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 9.91s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 35.25s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 12.64s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 14.53s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 39.88s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00204s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 113.5s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 115.2s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 140.5s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 117.4s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 118.5s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 143.9s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 103s ago] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00250s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01849s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02254s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02752s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03545s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00090s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00142s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00159s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.523s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 3.018s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 3.583s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 4.717s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 7.244s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 8.555s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 10.48s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 11.98s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00143s] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00253s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01658s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02911s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03372s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03891s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00140s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00193s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00143s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.385s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 5.277s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00154s] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00402s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02005s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02366s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02767s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03138s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.id)]
Cart.user remote columns [user.id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".id = :param_1
Cart.user will use Session.get() to optimize instance loads
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00176s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00129s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00146s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.525s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 3.006s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00183s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 3.399s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 5.168s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 6.232s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 7.189s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 7.934s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 8.7s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 10.47s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 11.52s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 12.06s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 12.84s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 13.5s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 17.26s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 18.14s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 19.34s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 20.9s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 21.88s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 30.26s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 31.87s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 33.62s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 34.74s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 35.43s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 36s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 36.86s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 37.83s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 42.91s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 44.39s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 45.01s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 49.02s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 55.97s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 58.13s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 59.01s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 62.15s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 63.13s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 69.01s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 70.49s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 67.26s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 76.42s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 77.9s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 82.71s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 86.47s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 87.95s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 88.14s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 89.3s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 90.78s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 88.05s ago] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.01049s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02858s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03312s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04277s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04751s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00492s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00177s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00343s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 3.557s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 12.37s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00185s] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00180s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01603s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01989s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0261s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02988s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00179s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00166s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00159s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 21.61s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 25.98s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00139s] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00877s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03526s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03963s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04346s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04912s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00474s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00132s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00128s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 2.032s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 10.95s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00170s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2.387s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00157s] (1628881302,)
INSERT INTO "user" (user_id, first_name, last_name, phone, created, updated) VALUES ($1::INTEGER, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, now(), now()) RETURNING "user".id, "user".created, "user".updated
[generated in 0.00197s] (1628881302, 'Владислав', 'Глуховский', None)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00261s] (1628881302, 3)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00181s] (1628881302, 3, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 44.76s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 44.72s ago] (1628881302, 3)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 44.71s ago] (1628881302, 3, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 62.28s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 62.24s ago] (1628881302, 3)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 62.23s ago] (1628881302, 3, 1)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 89.93s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 98.85s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 88.25s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 85.71s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 85.67s ago] (1628881302, 2)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 85.66s ago] (1628881302, 2, 1)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 95.07s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 104s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 91.6s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 89.33s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 89.29s ago] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 89.28s ago] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00175s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01775s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02222s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02884s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03255s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00124s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00118s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00138s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 8.127s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 81.04s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00206s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2.072s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 3.191s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00130s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00254s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00133s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00181s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01543s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02164s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02673s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03075s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00127s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00133s] ()
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00158s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00228s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00125s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00313s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01753s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02352s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.05255s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.05722s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00471s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00161s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00124s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.922s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 10.88s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 4.209s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 13.08s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 22.04s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 15.02s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 16.16s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 25.12s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00151s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 3.269s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 4.45s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00309s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00144s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00122s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00215s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01589s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02056s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02724s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03069s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00132s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00446s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00128s] ('main',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00175s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01724s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0211s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02534s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03163s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00321s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00102s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00272s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.399s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 3.902s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 5.098s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 6.109s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 9.331s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00159s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00263s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00263s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00134s] (1628881302, 1, 1)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 306.1s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 309.3s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 301.2s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 300.3s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 300.3s ago] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 300.3s ago] (1628881302, 1, 1)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 311.8s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 315.1s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 306.2s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 316.1s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 319.3s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 309.4s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 318.6s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 321.8s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 312s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 320.6s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 323.9s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 314.9s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 317.4s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 318.4s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 317.3s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 317.3s ago] (1628881302, 4)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 317.3s ago] (1628881302, 4, 1)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 320.5s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 322s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 320.6s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 320.6s ago] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 320.6s ago] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00193s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02267s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02659s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0302s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03415s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00163s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00137s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00149s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 11.63s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 19.58s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00160s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00164s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00449s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00138s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00257s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01794s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02234s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02593s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03161s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00106s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00322s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00154s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 2.033s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 4.739s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00259s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00131s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00157s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00125s] (1628881302, 1, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[cached since 34.09s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[cached since 34.08s ago] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 34.07s ago] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00179s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01388s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01697s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02044s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02466s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00181s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00254s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00243s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.549s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 17s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00244s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00194s] (1628881302,)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[cached since 0.01223s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00218s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00107s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00227s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01719s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02176s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02663s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03039s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00125s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00177s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00202s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 9.62s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 68.09s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00102s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00139s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00133s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00116s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00435s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01937s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02297s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02981s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03412s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00111s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00109s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00137s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.691s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 8.073s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00189s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00154s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00151s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00093s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00303s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01691s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02077s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02455s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02929s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.03257s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00126s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00152s] ('main',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00181s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01869s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02302s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0279s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03159s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00145s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00110s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00181s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.517s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 2.691s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00351s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::BIGINT
[generated in 0.00155s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::BIGINT AND cart.product_id = $2::INTEGER
[generated in 0.00161s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::BIGINT, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00170s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00192s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01672s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02134s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02553s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04579s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00411s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00164s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00153s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.395s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 7.282s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00142s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00141s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00165s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00117s] (1628881302, 1, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 669.7s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 669.6s ago] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 669.6s ago] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00190s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01502s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02787s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03184s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03635s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00222s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00178s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00152s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.72s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 28.62s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00173s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00154s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00142s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00118s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00264s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01741s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02256s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02703s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03084s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00191s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00133s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00217s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.492s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 36.87s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00162s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 1.518s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2.217s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00134s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00168s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00132s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00236s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01914s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02526s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02973s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03384s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00134s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00257s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00179s] ('main',)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00219s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0165s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02401s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02839s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03306s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00139s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00146s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00164s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.784s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 2.077s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00168s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00158s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00148s] (1628881302, 1)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 8.594s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 8.886s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 6.011s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 12.35s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 12.64s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 13.24s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 15.21s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 16.63s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 17.61s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 19.04s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 19.33s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 15.66s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 17.33s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 17.33s ago] (1628881302, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 369.8s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 369.8s ago] (1628881302, 1)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 404.5s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 404.5s ago] (1628881302, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00186s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01646s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02054s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02475s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03054s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00119s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00130s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00228s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.51s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 2.458s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00283s] (1,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00195s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01583s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02916s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03329s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0373s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00122s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00188s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00592s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02381s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02912s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03378s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.05789s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.01285s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00146s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00681s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0239s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03004s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03487s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03986s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00299s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00147s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00224s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01773s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02741s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03248s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03763s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00157s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00127s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.02235s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.09919s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.1039s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.1132s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.118s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00131s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00155s] ()
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00359s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01661s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02103s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02487s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03719s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.01684s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00129s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00184s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 1.673s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 11.29s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00167s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00160s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00138s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00469s] (1628881302, 1, 1)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00167s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01421s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01825s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02207s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02914s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')

CREATE TABLE banner (
	id SERIAL NOT NULL, 
	name VARCHAR(150) NOT NULL, 
	image VARCHAR(150), 
	description TEXT, 
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	updated TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)


[no key 0.00278s] ()

CREATE TABLE category (
	id SERIAL NOT NULL, 
	name VARCHAR(150) NOT NULL, 
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	updated TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (id)
)


[no key 0.00484s] ()

CREATE TABLE "user" (
	id SERIAL NOT NULL, 
	user_id INTEGER NOT NULL, 
	first_name VARCHAR(150), 
	last_name VARCHAR(150), 
	phone VARCHAR(13), 
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	updated TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (user_id)
)


[no key 0.00299s] ()

CREATE TABLE product (
	id SERIAL NOT NULL, 
	name VARCHAR(150) NOT NULL, 
	description TEXT NOT NULL, 
	price NUMERIC(5, 2) NOT NULL, 
	image VARCHAR(150) NOT NULL, 
	category_id INTEGER NOT NULL, 
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	updated TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(category_id) REFERENCES category (id) ON DELETE CASCADE
)


[no key 0.00290s] ()

CREATE TABLE cart (
	id SERIAL NOT NULL, 
	user_id INTEGER NOT NULL, 
	product_id INTEGER NOT NULL, 
	quantity INTEGER NOT NULL, 
	created TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	updated TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES "user" (user_id) ON DELETE CASCADE, 
	FOREIGN KEY(product_id) REFERENCES product (id) ON DELETE CASCADE
)


[no key 0.00755s] ()
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00220s] ()
INSERT INTO category (name, created, updated) SELECT p0::VARCHAR, p1::TIMESTAMP WITHOUT TIME ZONE, p2::TIMESTAMP WITHOUT TIME ZONE FROM (VALUES ($1::VARCHAR, now(), now(), 0), ($2::VARCHAR, now(), now(), 1)) AS imp_sen(p0, p1, p2, sen_counter) ORDER BY sen_counter RETURNING category.id, category.created, category.updated, category.id AS id__1
[generated in 0.00016s (insertmanyvalues) 1/1 (ordered)] ('Еда', 'Напитки')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00156s] ()
INSERT INTO banner (name, image, description, created, updated) SELECT p0::VARCHAR, p1::VARCHAR, p2::VARCHAR, p3::TIMESTAMP WITHOUT TIME ZONE, p4::TIMESTAMP WITHOUT TIME ZONE FROM (VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, now(), now(), 0), ($4: ... 331 characters truncated ... ounter) ORDER BY sen_counter RETURNING banner.id, banner.created, banner.updated, banner.id AS id__1
[generated in 0.00020s (insertmanyvalues) 1/1 (ordered)] ('main', None, 'Добро пожаловать!', 'about', None, 'Пиццерия Такая-то.\nРежим работы - круглосуточно.', 'payment', None, '<b>Варианты оплаты:</b>\n✅ Картой в боте\n✅ При получении карта/кеш\n✅ В заведении', 'shipping', None, '<b>Варианты доставки/заказа:</b>\n✅ Курьер\n✅ Самовынос (сейчас прибегу заберу)\n✅ Покушаю у Вас (сейчас прибегу)\n----------------------\n<b>Нельзя:</b>\n❌ Почта\n❌ Голуби', 'catalog', None, 'Категории:', 'cart', None, 'В корзине ничего нет!')
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 36.82s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 38.63s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[generated in 0.00154s] ('Пицца 1', 'Описание 1', 1.0, 'AgACAgIAAxkBAAIHNWYnV9eHN9B47mdcjxLibeumsWuhAAL12TEbohE5Sf_Qm7_rhgSBAQADAgADeQADNAQ', 1)
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 65.69s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 67.78s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[cached since 21s ago] ('Пицца 2', 'Описание 2', 2.0, 'AgACAgIAAxkBAAIHQGYnV-sr-5YN6pNhLc6deEHuA9WTAAL22TEbohE5SeKuaqc7FPh7AQADAgADeQADNAQ', 1)
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 82.25s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 84.22s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[cached since 37.65s ago] ('Пицца 3', 'Описание 3', 3.0, 'AgACAgIAAxkBAAIHS2YnV_x8MjphM5z7XkZy2-UenTjTAAL32TEbohE5Sf0Nc0rHHxTcAQADAgADeQADNAQ', 1)
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 92.56s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 125.7s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[generated in 0.00243s] ('AgACAgIAAxkBAAIHVWYnWB5aNESH8vQ27-WNuu4MQ0NOAAL42TEbohE5SWoO7IZ2pNgyAQADAgADeQADNAQ', 'about')
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 154.2s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 156.5s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 185.6s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 186.9s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[cached since 142.3s ago] ('Пицца 4', 'Описание 4', 4.0, 'AgACAgIAAxkBAAIHb2YnWGUD-pEzoSSgbVh56bfVJeBbAAL-2TEbohE5Sa0XZZ_HMY-9AQADAgADeQADNAQ', 1)
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 205.4s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 215.6s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[cached since 172.4s ago] ('Пицца 5', 'Описание 5', 5.0, 'AgACAgIAAxkBAAIHfmYnWIPXOxERt9P10WQJjhLvMf_rAAL_2TEbohE5SfQCBqmhwRHNAQADAgADeQADNAQ', 1)
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 227.5s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 237.1s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[cached since 111.4s ago] ('AgACAgIAAxkBAAIHgmYnWI6EHQK2iD0_k3TXM2JnZfc9AAIC2jEbohE5SctZ9q-UC7oTAQADAgADeQADNAQ', 'main')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 239.1s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 246.3s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[cached since 120.5s ago] ('AgACAgIAAxkBAAIHhmYnWJfPb5dkOfJC8PSc8SjND_MZAAIE2jEbohE5SXpItsSP6w-jAQADAgADeQADNAQ', 'cart')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 247.7s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 251.9s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[cached since 126.2s ago] ('AgACAgIAAxkBAAIHimYnWJw5lf1UYGxMDc4TCrTMXkXbAAIF2jEbohE5SaMIxxbHt4OlAQADAgADeQADNAQ', 'catalog')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 255s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 260.6s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[cached since 134.9s ago] ('AgACAgIAAxkBAAIHjmYnWKXnI84GDWzTZFfWK7esIN-1AAIG2jEbohE5SQPLu1wbPpTNAQADAgADeQADNAQ', 'payment')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 273.2s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 281s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[cached since 155.3s ago] ('AgACAgIAAxkBAAIHk2YnWLplLO2kBVV3VuXLzAABvtAlQwACB9oxG6IROUkBQxYbntrGdQEAAwIAA3kAAzQE', 'shipping')
COMMIT
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 292s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00158s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 295.1s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2.946s ago] (2,)
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 311.1s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 312.5s ago] ()
ROLLBACK
BEGIN (implicit)
INSERT INTO product (name, description, price, image, category_id, created, updated) VALUES ($1::VARCHAR, $2::VARCHAR, $3::NUMERIC(5, 2), $4::VARCHAR, $5::INTEGER, now(), now()) RETURNING product.id, product.created, product.updated
[cached since 270.9s ago] ('Чай с лимоном', 'Вкусный чай', 2.5, 'AgACAgIAAxkBAAIHqWYnWObt7XSx6XoGai_L1_72FzpjAAII2jEbohE5SUGrlDTbLprYAQADAgADbQADNAQ', 2)
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 325.7s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 330.6s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 39.02s ago] (2,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00543s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02123s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02836s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03276s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03687s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00099s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00129s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00312s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 3.973s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 5.311s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 6.128s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 10.11s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 16.43s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 11.88s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 63.28s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[cached since 74.14s ago] ()
UPDATE banner SET image=$1::VARCHAR, updated=now() WHERE banner.name = $2::VARCHAR
[generated in 0.00114s] ('AgACAgIAAxkBAAIHuGYnWnA0cjbNNY13fPmmLfS4m-tpAAIE2jEbohE5SXpItsSP6w-jAQADAgADeQADNAQ', 'cart')
COMMIT
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 87.55s ago] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 95.88s ago] ('payment',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 96.74s ago] ('shipping',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 97.39s ago] ('about',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 97.99s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 104.3s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00178s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00154s] (1628881302,)
INSERT INTO "user" (user_id, first_name, last_name, phone, created, updated) VALUES ($1::INTEGER, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, now(), now()) RETURNING "user".id, "user".created, "user".updated
[generated in 0.00116s] (1628881302, 'Владислав', 'Глуховский', None)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00160s] (1628881302, 1)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00236s] (1628881302, 1, 1)
COMMIT
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 4.465s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 4.452s ago] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[generated in 0.00120s] (2, 1)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 6.707s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 6.247s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 6.232s ago] (1628881302, 2)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 6.232s ago] (1628881302, 2, 1)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2482s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 2482s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 2482s ago] (1628881302, 3)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[cached since 2482s ago] (1628881302, 3, 1)
COMMIT
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00271s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01945s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02405s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02851s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03293s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00256s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00179s] ()
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00137s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 2.624s ago] ('catalog',)
SELECT category.id, category.name, category.created, category.updated 
FROM category
[cached since 5.027s ago] ()
ROLLBACK
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[generated in 0.00152s] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[generated in 0.00173s] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00428s] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[generated in 0.00211s] (3, 1)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 2.56s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 1.619s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 1.611s ago] (1628881302, 2)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 1.603s ago] (2, 2)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 4.238s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 3.24s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 3.233s ago] (1628881302, 3)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 3.225s ago] (2, 3)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 6.731s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 5.894s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 5.888s ago] (1628881302, 4)
INSERT INTO cart (user_id, product_id, quantity, created, updated) VALUES ($1::INTEGER, $2::INTEGER, $3::INTEGER, now(), now()) RETURNING cart.id, cart.created, cart.updated
[generated in 0.00147s] (1628881302, 4, 1)
COMMIT
BEGIN (implicit)
SELECT product.id, product.name, product.description, product.price, product.image, product.category_id, product.created, product.updated 
FROM product 
WHERE product.category_id = $1::INTEGER
[cached since 9.112s ago] (1,)
ROLLBACK
BEGIN (implicit)
SELECT "user".id, "user".user_id, "user".first_name, "user".last_name, "user".phone, "user".created, "user".updated 
FROM "user" 
WHERE "user".user_id = $1::INTEGER
[cached since 8.228s ago] (1628881302,)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 8.221s ago] (1628881302, 3)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 8.213s ago] (3, 3)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[generated in 0.00200s] (1628881302,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00263s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02896s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.0341s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04348s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.04815s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00281s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00163s] ()
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[generated in 0.00262s] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00136s] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[generated in 0.00157s] (4, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 154.4s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 158s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 175.2s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 22.54s ago] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 22.53s ago] (5, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 176.9s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 177.8s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 209.3s ago] (1628881302,)
ROLLBACK
select pg_catalog.version()
[raw sql] ()
select current_schema()
[raw sql] ()
show standard_conforming_strings
[raw sql] ()
BEGIN (implicit)
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[generated in 0.00265s] ('banner', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.01931s ago] ('category', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.02502s ago] ('product', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03116s ago] ('user', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
SELECT pg_catalog.pg_class.relname 
FROM pg_catalog.pg_class JOIN pg_catalog.pg_namespace ON pg_catalog.pg_namespace.oid = pg_catalog.pg_class.relnamespace 
WHERE pg_catalog.pg_class.relname = $1::VARCHAR AND pg_catalog.pg_class.relkind = ANY (ARRAY[$2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR]) AND pg_catalog.pg_table_is_visible(pg_catalog.pg_class.oid) AND pg_catalog.pg_namespace.nspname != $7::VARCHAR
[cached since 0.03677s ago] ('cart', 'r', 'p', 'f', 'v', 'm', 'pg_catalog')
COMMIT
BEGIN (implicit)
(Banner|banner) _post_configure_properties() started
(Banner|banner) initialize prop id
(Banner|banner) initialize prop name
(Banner|banner) initialize prop image
(Banner|banner) initialize prop description
(Banner|banner) initialize prop created
(Banner|banner) initialize prop updated
(Banner|banner) _post_configure_properties() complete
(Category|category) _post_configure_properties() started
(Category|category) initialize prop id
(Category|category) initialize prop name
(Category|category) initialize prop created
(Category|category) initialize prop updated
(Category|category) _post_configure_properties() complete
(Product|product) _post_configure_properties() started
(Product|product) initialize prop category
Product.category setup primary join category.id = product.category_id
Product.category setup secondary join None
Product.category synchronize pairs [(category.id => product.category_id)]
Product.category secondary synchronize pairs []
Product.category local/remote pairs [(product.category_id / category.id)]
Product.category remote columns [category.id]
Product.category local columns [product.category_id]
Product.category relationship direction RelationshipDirection.MANYTOONE
(Category|category) _configure_property(product, RelationshipProperty)
Category.product setup primary join category.id = product.category_id
Category.product setup secondary join None
Category.product synchronize pairs [(category.id => product.category_id)]
Category.product secondary synchronize pairs []
Category.product local/remote pairs [(category.id / product.category_id)]
Category.product remote columns [product.category_id]
Category.product local columns [category.id]
Category.product relationship direction RelationshipDirection.ONETOMANY
Category.product lazy loading clause :param_1 = product.category_id
Product.category lazy loading clause category.id = :param_1
Product.category will use Session.get() to optimize instance loads
(Product|product) initialize prop id
(Product|product) initialize prop name
(Product|product) initialize prop description
(Product|product) initialize prop price
(Product|product) initialize prop image
(Product|product) initialize prop category_id
(Product|product) initialize prop created
(Product|product) initialize prop updated
(Product|product) _post_configure_properties() complete
(User|user) _post_configure_properties() started
(User|user) initialize prop id
(User|user) initialize prop user_id
(User|user) initialize prop first_name
(User|user) initialize prop last_name
(User|user) initialize prop phone
(User|user) initialize prop created
(User|user) initialize prop updated
(User|user) _post_configure_properties() complete
(Cart|cart) _post_configure_properties() started
(Cart|cart) initialize prop user
Cart.user setup primary join "user".user_id = cart.user_id
Cart.user setup secondary join None
Cart.user synchronize pairs [(user.user_id => cart.user_id)]
Cart.user secondary synchronize pairs []
Cart.user local/remote pairs [(cart.user_id / user.user_id)]
Cart.user remote columns [user.user_id]
Cart.user local columns [cart.user_id]
Cart.user relationship direction RelationshipDirection.MANYTOONE
(User|user) _configure_property(cart, RelationshipProperty)
User.cart setup primary join "user".user_id = cart.user_id
User.cart setup secondary join None
User.cart synchronize pairs [(user.user_id => cart.user_id)]
User.cart secondary synchronize pairs []
User.cart local/remote pairs [(user.user_id / cart.user_id)]
User.cart remote columns [cart.user_id]
User.cart local columns [user.user_id]
User.cart relationship direction RelationshipDirection.ONETOMANY
User.cart lazy loading clause :param_1 = cart.user_id
Cart.user lazy loading clause "user".user_id = :param_1
(Cart|cart) initialize prop product
Cart.product setup primary join product.id = cart.product_id
Cart.product setup secondary join None
Cart.product synchronize pairs [(product.id => cart.product_id)]
Cart.product secondary synchronize pairs []
Cart.product local/remote pairs [(cart.product_id / product.id)]
Cart.product remote columns [product.id]
Cart.product local columns [cart.product_id]
Cart.product relationship direction RelationshipDirection.MANYTOONE
(Product|product) _configure_property(cart, RelationshipProperty)
Product.cart setup primary join product.id = cart.product_id
Product.cart setup secondary join None
Product.cart synchronize pairs [(product.id => cart.product_id)]
Product.cart secondary synchronize pairs []
Product.cart local/remote pairs [(product.id / cart.product_id)]
Product.cart remote columns [cart.product_id]
Product.cart local columns [product.id]
Product.cart relationship direction RelationshipDirection.ONETOMANY
Product.cart lazy loading clause :param_1 = cart.product_id
Cart.product lazy loading clause product.id = :param_1
Cart.product will use Session.get() to optimize instance loads
(Cart|cart) initialize prop id
(Cart|cart) initialize prop user_id
(Cart|cart) initialize prop product_id
(Cart|cart) initialize prop quantity
(Cart|cart) initialize prop created
(Cart|cart) initialize prop updated
(Cart|cart) _post_configure_properties() complete
SELECT category.id, category.name, category.created, category.updated 
FROM category
[generated in 0.00148s] ()
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner
[generated in 0.00130s] ()
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated 
FROM cart 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00168s] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[generated in 0.00121s] (6, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[generated in 0.00181s] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00195s] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 2.092s ago] (5, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 2.085s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 1.028s ago] (1628881302, 1)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 3.109s ago] (4, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 3.1s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 15.12s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 14.82s ago] (1628881302, 2)
UPDATE cart SET quantity=$1::INTEGER, updated=now() WHERE cart.id = $2::INTEGER
[cached since 16.9s ago] (1, 2)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 16.89s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 17.95s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 18.63s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 19.16s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 23s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 24.19s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 25.21s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 26.09s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 30.25s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 31.07s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 32.79s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
DELETE FROM cart WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[generated in 0.00131s] (1628881302, 2)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 35.95s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 47.26s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 48.16s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 47.68s ago] (1628881302, 4)
DELETE FROM cart WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 13.81s ago] (1628881302, 4)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 49.76s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[generated in 0.00151s] ('main',)
ROLLBACK
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 66.43s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
DELETE FROM cart WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 32.08s ago] (1628881302, 1)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 68.03s ago] (1628881302,)
ROLLBACK
BEGIN (implicit)
DELETE FROM cart WHERE cart.user_id = $1::INTEGER AND cart.product_id = $2::INTEGER
[cached since 33.49s ago] (1628881302, 3)
COMMIT
BEGIN (implicit)
SELECT cart.id, cart.user_id, cart.product_id, cart.quantity, cart.created, cart.updated, product_1.id AS id_1, product_1.name, product_1.description, product_1.price, product_1.image, product_1.category_id, product_1.created AS created_1, product_1.updated AS updated_1 
FROM cart LEFT OUTER JOIN product AS product_1 ON product_1.id = cart.product_id 
WHERE cart.user_id = $1::INTEGER
[cached since 69.44s ago] (1628881302,)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 4.326s ago] ('cart',)
ROLLBACK
BEGIN (implicit)
SELECT banner.id, banner.name, banner.image, banner.description, banner.created, banner.updated 
FROM banner 
WHERE banner.name = $1::VARCHAR
[cached since 7.104s ago] ('main',)
ROLLBACK
